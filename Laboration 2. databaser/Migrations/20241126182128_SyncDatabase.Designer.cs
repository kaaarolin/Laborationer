// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Laboration_2._databaser.Migrations
{
    [DbContext(typeof(BokhandelContext))]
    [Migration("20241126182128_SyncDatabase")]
    partial class SyncDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Laboration_2._databaser.Butiker", b =>
                {
                    b.Property<int>("ButikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ButikId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Butiksnamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ButikId");

                    b.ToTable("Butiker");
                });

            modelBuilder.Entity("Laboration_2._databaser.Böcker", b =>
                {
                    b.Property<string>("ISBN13")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AntalSidor")
                        .HasColumnType("int");

                    b.Property<int?>("FörfattareId")
                        .HasColumnType("int");

                    b.Property<string>("Förlag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Pris")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Språk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("Utgivningsdatum")
                        .HasColumnType("date");

                    b.HasKey("ISBN13");

                    b.ToTable("Böcker");
                });

            modelBuilder.Entity("Laboration_2._databaser.Lagersaldo", b =>
                {
                    b.Property<int>("ButikId")
                        .HasColumnType("int");

                    b.Property<int>("Antal")
                        .HasColumnType("int");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ButikId");

                    b.HasIndex("Isbn");

                    b.ToTable("Lagersaldo");
                });

            modelBuilder.Entity("Laboration_2._databaser.Lagersaldo", b =>
                {
                    b.HasOne("Laboration_2._databaser.Butiker", "Butiker")
                        .WithMany("Lagersaldo")
                        .HasForeignKey("ButikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Laboration_2._databaser.Böcker", "Böcker")
                        .WithMany("Lagersaldo")
                        .HasForeignKey("Isbn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Butiker");

                    b.Navigation("Böcker");
                });

            modelBuilder.Entity("Laboration_2._databaser.Butiker", b =>
                {
                    b.Navigation("Lagersaldo");
                });

            modelBuilder.Entity("Laboration_2._databaser.Böcker", b =>
                {
                    b.Navigation("Lagersaldo");
                });
#pragma warning restore 612, 618
        }
    }
}
